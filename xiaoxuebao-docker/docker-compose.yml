version: '3.8'

services:
  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: xiaoxuebao-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./frontend/web-app/out:/usr/share/nginx/html/app:ro
      - ./frontend/web-admin/build:/usr/share/nginx/html/admin:ro
    depends_on:
      - web-app
      - web-admin
      - api-gateway
    networks:
      - xiaoxuebao-network
    restart: unless-stopped

  # 用户前端 (Next.js)
  web-app:
    build:
      context: ./frontend/web-app
      dockerfile: Dockerfile
    container_name: xiaoxuebao-web-app
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://api-gateway:8000
    volumes:
      - ./frontend/web-app:/app
      - /app/node_modules
      - /app/.next
    networks:
      - xiaoxuebao-network
    restart: unless-stopped

  # 管理后台 (React)
  web-admin:
    build:
      context: ./frontend/web-admin
      dockerfile: Dockerfile
    container_name: xiaoxuebao-web-admin
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://api-gateway:8000
    volumes:
      - ./frontend/web-admin:/app
      - /app/node_modules
      - /app/build
    networks:
      - xiaoxuebao-network
    restart: unless-stopped

  # API网关
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: xiaoxuebao-api-gateway
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - postgres
      - redis
      - elasticsearch
    networks:
      - xiaoxuebao-network
    restart: unless-stopped

  # 知识库服务
  knowledge-service:
    build:
      context: ./services/knowledge-service
      dockerfile: Dockerfile
    container_name: xiaoxuebao-knowledge-service
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - LLM_API_KEY=${LLM_API_KEY}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL}
    depends_on:
      - postgres
      - redis
      - elasticsearch
    networks:
      - xiaoxuebao-network
    restart: unless-stopped

  # 搜索服务
  search-service:
    build:
      context: ./services/search-service
      dockerfile: Dockerfile
    container_name: xiaoxuebao-search-service
    ports:
      - "8002:8002"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - REDIS_URL=redis://redis:6379
      - LLM_API_KEY=${LLM_API_KEY}
    depends_on:
      - elasticsearch
      - redis
    networks:
      - xiaoxuebao-network
    restart: unless-stopped

  # 用户服务
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: xiaoxuebao-user-service
    ports:
      - "8003:8003"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - postgres
      - redis
    networks:
      - xiaoxuebao-network
    restart: unless-stopped

  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: xiaoxuebao-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    networks:
      - xiaoxuebao-network
    restart: unless-stopped

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: xiaoxuebao-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - xiaoxuebao-network
    restart: unless-stopped

  # Elasticsearch 搜索引擎
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: xiaoxuebao-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - xiaoxuebao-network
    restart: unless-stopped
    ulimits:
      memlock:
        soft: -1
        hard: -1

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  elasticsearch_data:
    driver: local

networks:
  xiaoxuebao-network:
    driver: bridge
